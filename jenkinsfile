pipeline {

    agent any
    
    tools {
        maven "Maven"
    }


    environment {
        NEXUS_VERSION = "nexus2"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "15.206.79.171:8081"
        NEXUS_REPOSITORY = "Releases"
        NEXUS_CREDENTIAL_ID = "nexus"
    }



    stages {
        
	stage('Git Checkout') {
            steps {
               git branch: 'main', credentialsId: 'details', url: 'https://github.com/srinivaskurecheti/JavaWebCalculator.git' 
            }
        }


	stage('Unit Testing') {
            steps {
               sh 'mvn test'
            }

	    post {
                always {
                    junit '**/target/surefire-reports/TEST-mypackage.CalculatorTest.xml'
		}
	    }
        }

        
	 stage('full Testing') {
            steps {
               sh 'mvn package'
            }
        }


	 stage('Email alert') {
            steps {
               mail bcc: '', body: '''Hello welcome jenkins email alerts
               from srinivas
               thankyou''', cc: '', from: '', replyTo: '', subject: 'jenkins file', to: 'kishore@dl ramesh@dl rajesh@dl'
            }
        }


	 stage('Sonarqube analysis') {
            steps {

	        script{

               withSonarQubeEnv(credentialsId: 'sonar-cred') {
	       sh 'mvn clean package sonar:sonar'
                    }

	       }
            }
        }


       
        stage(" Deploying to Nexus") {
            steps {
                script {
                  def pom = readMavenPom file: "pom.xml";
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
         echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
         





    }
}
